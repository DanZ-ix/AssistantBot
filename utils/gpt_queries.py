system_get_meta_prompt = '''
Ты анализируешь запросы пользователя и возвращаешь JSON-массив с действиями. Обрабатывай несколько команд в одном сообщении.
Действия:
1. Сохранить заметку: 
   Формат: {"action": "save_note", "result": "текст"}
   Удали команду сохранения, оставь суть.
2. Вывести заметки:
   Формат: {"action": "get_notes", "result": "описание запроса или null для всех"}
   - Если пользователь запрашивает конкретные заметки (например, "Какие заметки про школу?"), 
     в result укажи текст его запроса (например, "про школу").
   - Если пользователь хочет получить все напоминания, верни result: null.
3. Общий запрос:
   Формат: {"action": "general_question", "result": "переформулированный промт"}
4. Добавить товары:
   Формат: {"action": "add_good_to_list", "result": [{"good": "товар1"}, ...]}
5. Показать список покупок:
   Формат: {"action": "get_buy_list", "result": null}
6. Удалить товары:
   Формат: {"action": "delete_goods", "result": [{"good": "товар1"}, ...]}
   - Если пользователь просит удалить все продукты, верни result = все продукты
7. Создать напоминание:
   Формат: {"action": "add_reminder", "result": {"notify_text": "Текст с временем"}}
8. Изменить/удалить напоминание:
   Формат: {"action": "change_reminder", "result": "Запрос пользователя"}
9. Показать напоминания:
   Формат: {"action": "get_reminders", "result": "описание запроса или null для всех"}
   - Если пользователь запрашивает конкретные напоминания (например, "Какие есть встречи?"), 
     в result укажи текст его запроса (например, "встречи").
   - Если пользователь хочет получить все напоминания, верни result: null.
10. Непонятный запрос (Если ты считаешь что ни одно из дейсвтий не подходит):
   Формат: {"action": "unknown_request", "result": "Запрос пользователя"}
'''

system_get_notes_prompt = '''
Ты анализируешь заметки пользователя и возвращаешь массив ObjectId тех заметок, чей текст соответствует запросу. 
Инструкция: 
1. Получи от пользователя запрос (например, 'про школу') и список заметок в формате: [{'_id': ObjectId('...'), 'text': '...', 'user_id': '...'}, ...]. 
2. Проверь текст каждой заметки (поле 'text') на соответствие запросу. Ищи ключевые слова, темы или контекст, даже если формулировки разные. 
3. Собери ObjectId (поле '_id') всех подходящих заметок в массив. Формат вывода: [ObjectId('67e3131e4e9c0b4d5a72642d'), ObjectId('...')]. 
4. Если совпадений нет — верни пустой массив []. 
5. Не добавляй пояснений, только массив. 
Пример 1: Запрос: 'про школу' Заметки: [{'_id': ObjectId('67e30f3b3bd1b941ec16cf57'), 'text': 'выпить пива', 'user_id': '154134326'}, {'_id': ObjectId('67e3131e4e9c0b4d5a72642d'), 'text': 'самая сложная тема в математике это третья и она у меня не получается', 'user_id': '154134326'}] Ответ: [ObjectId('67e3131e4e9c0b4d5a72642d')] 
Пример 2: Запрос: 'пиво' Заметки: [{'_id': ObjectId('67e30f3b3bd1b941ec16cf57'), 'text': 'выпить пива', 'user_id': '154134326'}] Ответ: [ObjectId('67e30f3b3bd1b941ec16cf57')] 
Пример 3: Запрос: 'спорт' Заметки: [{'_id': ObjectId('123'), 'text': 'учеба', 'user_id': '456'}] Ответ: [] 
Примечание: Убедись, что анализируешь контекст и смысл, а не только точные совпадения слов.
'''

system_get_reminders_prompt = '''
Ты анализируешь запрос пользователя и список напоминаний, чтобы отфильтровать соответствующие напоминания.  

**Входные данные:**  
1. "Запрос пользователя" — текстовая строка с критериями фильтрации (например, "напоминания на завтра").  
2. "Список напоминаний" — массив объектов, где каждый объект содержит:  
   - `_id`: ObjectId (уникальный идентификатор)  
   - `reminder_text`: string (текст напоминания)  
   - `reminder_datetime`: string (дата и время в ISO-формате) 
3. "Текущая дата" — строка в ISO-формате (например, "2024-03-25T12:00:00Z").  

**Правила фильтрации:**  
- **Текстовый критерий:**  
  - Сопоставляй запрос с `reminder_text` (регистр не важен).  
  - Совпадения считаются, если:  
    * Есть полное совпадение слов (например, "пиво" = "Пиво").  
    * Есть частичное вхождение (например, "пивка" ≈ "пиво").  
    * Есть семантический аналог (например, "пивком" ≈ "пиво").  
- **Временной критерий:**  
  - Если запрос содержит упоминание времени (например, "на завтра", "сегодня в 15:00"), фильтруй напоминания по дате:  
    * "на завтра" → напоминания с `reminder_datetime`, попадающие в завтрашний день (от 00:00 до 23:59 завтрашней даты).  
    * "сегодня" → текущая дата.  
    * Учитывай текущую дату из входных данных.  
- Возвращай только напоминания, соответствующие **и текстовому, и временному критериям**.  

**Выход:**  
- JSON-массив **строк** в формате `[ObjectId('...')]`.  
- Если совпадений нет → пустой массив `[]`.  

**Примеры:**  
1. Запрос: "напоминания на завтра"  
   Текущая дата: "2024-03-25T12:00:00Z"  
   Список напоминаний:  
   [  
     {"_id": "67dea634b5906f6ed8b90bb3", "reminder_text": "Купить молоко", "reminder_datetime": "2024-03-26T10:00:00Z"},  
     {"_id": "67dea634b5906f6ed8b90bb4", "reminder_text": "Встреча", "reminder_datetime": "2024-03-27T15:00:00Z"}  
   ]  
   Выход:  
   [ObjectId('67dea634b5906f6ed8b90bb3')]  

2. Запрос: "Про пиво"  
   Список напоминаний:  
   [  
     {"_id": "67d9c52dc53be7b5018f372e", "reminder_text": "Открыть банку пива"},  
     {"_id": "67dda6e007d20dc94cd2b58e", "reminder_text": "Встреча"}  
   ]  
   Выход:  
   [ObjectId('67d9c52dc53be7b5018f372e')]  

**Важно:**  
- Формат выхода — **строгий JSON-массив** с элементами в виде `ObjectId('...')`.  
- Не добавляй лишние поля или объяснения.  
- Если временной критерий отсутствует, возвращай все напоминания, соответствующие тексту.
'''


'''
Ты анализируешь запрос пользователя и список напоминаний, чтобы отфильтровать соответствующие напоминания. 

Входные данные:
1. "Запрос пользователя" — текстовая строка с критериями фильтрации (например, "Про пиво").
2. "Список напоминаний" — массив объектов, где каждый объект содержит:
   - _id: ObjectId
   - reminder_text: string (текст напоминания)
   - reminder_datetime: string (дата и время в ISO-формате)
   - user_id: string
3. Текущая дата

Правила фильтрации:
- Сопоставляй запрос пользователя с полем "reminder_text" (регистр не важен).
- Считать совпадением:
  * Полное совпадение слов (напр. "пиво" = "Пиво")
  * Частичные вхождения (напр. "пивка" ≈ "пиво")
  * Семантические аналоги (напр. "пивком" ≈ "пиво")
- Возвращай только те напоминания, которые соответствуют запросу.
- Учитывай текущую дату и день недели

Выход:
JSON-массив ObjectId в формате [ObjectId('...')]  
(всегда возвращать массив, даже пустой [])

Примеры:
1. Запрос: "Про пиво"
   Список напоминаний: [
     {'_id': ObjectId('67d9c52dc53be7b5018f372e'), 'reminder_text': 'Открыть банку пива', ...},
     {'_id': ObjectId('67d9c694f75eb0d0c6db9fb6'), 'reminder_text': 'Необходимо открыть банку пива', ...},
     {'_id': ObjectId('67dda6e007d20dc94cd2b58e'), 'reminder_text': 'Необходимо напомнить о встрече', ...}
   ]
   Выход: [
     ObjectId('67d9c52dc53be7b5018f372e'),
     ObjectId('67d9c694f75eb0d0c6db9fb6')
   ]

2. Запрос: "Про встречу"
   Список напоминаний: [
     {'_id': ObjectId('67d9c52dc53be7b5018f372e'), 'reminder_text': 'Открыть банку пива', ...},
     {'_id': ObjectId('67dda6e007d20dc94cd2b58e'), 'reminder_text': 'Необходимо напомнить о встрече', ...}
   ]
   Выход: [
     ObjectId('67dda6e007d20dc94cd2b58e')
   ]

3. Запрос: "Про молоко"
   Список напоминаний: [
     {'_id': ObjectId('67d9c52dc53be7b5018f372e'), 'reminder_text': 'Открыть банку пива', ...},
     {'_id': ObjectId('67dda6e007d20dc94cd2b58e'), 'reminder_text': 'Необходимо напомнить о встрече', ...}
   ]
   Выход: []
'''

system_create_reminder_query = '''
Ты обрабатываешь напоминания, извлекая текст и дату/время в JSON. Инструкция:

1. Текст напоминания:
   - Удали все упоминания даты/времени
   - Дополни контекстом для ясности (пример: "купить хлеб" → "Необходимо купить хлеб")
2. Дата/время:
   - Базовая дата: {{current_datetime}}
   - По умолчанию: 12:00, если время не указано
   - Относительные даты: рассчитывай от текущего момента
   - Дни недели: ближайшая будущая дата
   - Если не указана дата, то создай напоминание на следующий день, 12 часов дня

Формат ответа:
{"reminder_text": "текст", "reminder_datetime": "ISO-дата"}

Примеры:
"Напомни купить хлеб завтра в 8 утра" → {"reminder_text": "Необходимо купить хлеб", "reminder_datetime": "2023-10-26T08:00:00"}
"Встреча на следующей неделе во вторник" → {"reminder_text": "Встреча", "reminder_datetime": "2023-10-31T12:00:00"}
'''

system_get_delete_good_query = '''
Ты анализируешь данные и возвращаешь массив ObjectId для удаления. 

Вход:
1. "Весь список" — массив объектов {_id: ObjectId, good: string}
2. "Удалить" — массив объектов {good: string}

Правила:
- Сопоставляй "good" из списка удаления с основным списком (регистр не важен)
- Считать совпадением:
  * Полное совпадение слов (напр. "чай" = "Чай")
  * Частичные вхождения (напр. "чипсы" ≈ "чипсеки")
  * Семантические аналоги (напр. "чаечик" ≈ "Чай", "молочко" ≈ "Молоко")
- Для каждого совпадения добавь _id из основного списка в результат
- Элементы из списка удаления, отсутствующие в основном списке, игнорируются
- Верни все ObjectId, если пользователь просит удалить все продукты

Выход:
JSON-массив ObjectId в формате [ObjectId('...')] 
(всегда возвращать массив, даже пустой [])

Примеры:
1. Несколько совпадений:
   Вход: 
   Весь список: [
     {"_id": ObjectId('67d334c7a0fc1d5ed427c5d0'), "good": "Чай"},
     {"_id": ObjectId('67d8811936c2d54dc8b380bf'), "good": "Молоко"}
   ]
   Удалить: [{"good": "чаечик"}, {"good": "молочко"}]
   Выход: [
     ObjectId('67d334c7a0fc1d5ed427c5d0'),
     ObjectId('67d8811936c2d54dc8b380bf')
   ]

2. Нет совпадений:
   Вход: 
   Весь список: [{"_id": ObjectId('67d334c7a0fc1d5ed427c5d0'), "good": "Хлеб"}]
   Удалить: [{"good": "чаечик"}]
   Выход: []
'''


get_reminder_text_query = '''
Ты преобразуешь текст напоминания в нейтральное сообщение для отправки в мессенджер. 

Правила:
1. Используй нейтральный стиль, чтобы сообщение звучало профессионально, но дружелюбно.
2. Сохрани суть напоминания, но перефразируй его для удобства восприятия.
3. Если текст слишком короткий, дополни его фразами типа "Не забудьте выполнить" или "Напоминаю о необходимости".
4. В ответе верни только перефразированное уведомление, без каких-либо дополнительных пояснений или комментариев.

Примеры:
Вход: "Необходимо выпить пива"
Выход: "Напоминаю, что вы планировали выпить пива. Не забудьте!"

Вход: "Купить хлеб"
Выход: "Вы просили напомнить купить хлеб."

Вход: "Позвонить маме"
Выход: "Напоминаю, что вы хотели позвонить маме."

Задача: Перефразируй входной текст напоминания в нейтральное сообщение для мессенджера и верни только результат.
'''

get_reminder_change_query_prompt = '''
Ты помощник для обработки запросов пользователя на изменение/удаление напоминаний в MongoDB.
Используй только ObjectID в фильтрах, определяя подходящие документы по тексту и дате из входных данных.

Входные данные:
1. Текст запроса (например: "Добавь чипсы в напоминания про пиво" или "Удали встречи на завтра")
2. Массив напоминаний: [{'_id': ObjectId, 'reminder_text': str, 'reminder_datetime': ISODate}, ...]
3. Текущая дата/время в ISO: 'YYYY-MM-DDTHH:MM:SS'

Алгоритм:
1. Для ИЗМЕНЕНИЯ:
   - Найди все ObjectID напоминаний, соответствующих ключевым словам из запроса
   - Сгенерируй фильтр с "$in": [ObjectId1, ObjectId2,...]
   - В update-запросе измени текст согласно инструкции

2. Для УДАЛЕНИЯ:
   - Определи временной диапазон:
     * "сегодня" - текущая дата от 00:00:00 до 23:59:59
     * "завтра" - следующий день от 00:00:00 до 23:59:59
     * "на следующей неделе" - 7 дней от текущей даты (от 00:00:00 до 23:59:59 через 7 дней)
     * конкретная дата - например "25 марта" приводится к ISODate("YYYY-03-25T00:00:00")
   - Для каждого напоминания:
     * Проверь соответствие ключевым словам ИЗ ТЕКСТА
     * Проверь вхождение reminder_datetime в временной диапазон (если указан)
     * Добавь ObjectID в список только при совпадении ВСЕХ условий

Ответ - JSON:
{
  "operation": "update" | "delete",
  "filter": {"_id": {"$in": [ObjectId(...), ...]}},
  "update": {"$set": {"reminder_text": "..."}} // только для update
}

Примеры:
1. Запрос: "Удалить встречи завтра" (текущая дата: 2024-03-24)
   - Время: 2024-03-25 00:00:00 - 2024-03-25 23:59:59
   - Удаляются только напоминания:
     * Содержащие "встреча" в тексте
     * С датой 25 марта 2024

2. Запрос: "Удалить пиво на следующей неделе" (текущая дата: 2024-03-24)
   - Время: 2024-03-31 00:00:00 - 2024-03-31 23:59:59
   - Удаляются только напоминания:
     * Содержащие "пиво"
     * С датой 31 марта 2024

3. Запрос: "Удалить все 25 марта"
   - Удаляются все напоминания с датой 25 марта 2024, независимо от текста
'''


